#!/bin/bash
# Don't forget to adjust the permissions with:
#chmod +x ~/somecrazyfolder/script1


## Test for Dependencies

 command -v rg >/dev/null 2>&1 || { echo >&2 "I require RipGrep but it's not installed.  Aborting."; exit 1; }
command -v highlight >/dev/null 2>&1 || { echo >&2 "I require highlight but it's not installed. install it with sudo apt install highlight  Aborting."; exit 1; }
command -v fzf >/dev/null 2>&1 || { echo >&2 "I require fzf but it's not installed.  Aborting."; exit 1; }

#if [[  !(command -v highlight) ]]; then
#	echo "you need to install highlight first"

## Program 

rgf='rg --files-with-matches --no-messages'



### Input Test
# Theres no point using this if there is no recursive term to search for,
# Give an error if that's the case:
#  if [ ! "$#" -gt 0 ]; then echo "Need a string to search for!"; return 1; fi

### Searching
rg --files-with-matches --no-messages "$1" | fzf --preview "highlight -O ansi -l {} 2> /dev/null | rg --colors 'match:bg:yellow' --ignore-case --pretty --context 10 '$1' || rg --ignore-case --pretty --context 10 '$1' {}"



# if [[ "$1" == "" ]]; then
# 	echo "Warning: No Search Arguments Given"
# elif [[ "$2" == "" ]]; then
# 	$rgf "$1" | `fzf --preview "highlight -O ansi -l {} 2> /dev/null | rg --colors 'match:bg:yellow' --ignore-case --pretty --context 10 '$1' || rg --ignore-case --pretty --context 10 '$1' {}"`
# 	echo "searching for one term"
# elif [[ "$3" == "" ]]; then
# 	$rgf "$1" $(rgf "$2")  | `fzf --preview "highlight -O ansi -l {} 2> /dev/null | rg --colors 'match:bg:yellow' --ignore-case --pretty --context 10 '$1' || rg --ignore-case --pretty --context 10 '$1' {}"`
# 	echo "searching for two term"
# elif [[ "$4" == "" ]]; then
# 	$rgf "$1" $(rgf "$2" $(rgf $3))  | `fzf --preview "highlight -O ansi -l {} 2> /dev/null | rg --colors 'match:bg:yellow' --ignore-case --pretty --context 10 '$1' || rg --ignore-case --pretty --context 10 '$1' {}"`
# 	echo "searching for two term"
# elif [[ "$5" == "" ]]; then
# 	echo "searching for two term"
# elif [[ "$6" == "" ]]; then
# 	echo "searching for two term"
# elif [[ "$7" == "" ]]; then
# 	echo "searching for two term"
# elif [[ "$8" == "" ]]; then
# 	echo "searching for two term"
# elif [[ "$9" == "" ]]; then
# 	echo "searching for two term"
# elif [[ "$10" == "" ]]; then
# 	echo "searching for two term"
# elif [[ "$11" == "" ]]; then
# 	echo "searching for two term"
# elif [[ "$12" == "" ]]; then
# 	echo "searching for two term"
# elif [[ "$13" == "" ]]; then
# 	echo "searching for two term"
# elif [[ "$14" == "" ]]; then
# 	echo "searching for two term"
# elif [[ "$15" == "" ]]; then
# 	echo "searching for two term"
# elif [[ "$16" == "" ]]; then
# 	echo "searching for two term"
# elif [[ "$17" == "" ]]; then
# 	echo "searching for two term"
# elif [[ "$18" == "" ]]; then
# 	echo "searching for two term"
# elif [[ "$19" == "" ]]; then
# 	echo "searching for two term"
# else
# 	echo "too many terms, the bash script needs to be made into a loop
# 	edit  ~/bin/fif"
# fi
# 
# 
# 
# 
# 
# 
# 
# 
# 
# 
# 
# 
# 
# 
# 
# 
# 
# 
# 
# 
# 
# 
# 
# 
# 
# 
# 
# 
# 
# 
# 
# 
# 
# 
# 
# 
# 
# 
# 
# 
# 








### Exit the script
# If I don't exit the script I can't pipe this into things





#"" vim:fdm=expr:fdl=0
#"" vim:fde=getline(v\:lnum)=~'^""'?'>'.(matchend(getline(v\:lnum),'""*')-2)\:'='
